- name: installing user application
  hosts: shipping
  become: yes
  vars:
    mysql_password: RoboShop@1
  tasks:
    - name: installing maven
      ansible.builtin.dnf:
        name: maven
        state: present
    - name: installing maven
      ansible.builtin.user:
        name: roboshop
    - name: create directory
      ansible.builtin.file:
        path: /app
        state: absent
    - name: create directory
      ansible.builtin.file:
        path: /app
        state: directory
    - name: download application
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
        dest: /tmp
    - name: unzipping file
      ansible.builtin.unarchive:
        src: /tmp/shipping.zip
        dest: /app
        remote_src: yes
    - name: dependencies install
      ansible.builtin.command: mvn clean package
      args:
        chdir: /app
    - name: renaming package
      ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
      args:
        chdir: /app
    - name: daemon reload
      ansible.builtin.systemd_service:
        daemon_reload: true
    - name: installing mysql
      ansible.builtin.command: dnf install mysql -y
    - name: checking existing data in mysql
      ansible.builtin.command: mysql -h mysql.beesh.life -uroot -p{{mysql_password}} -sN -e "SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'cities'"
      register: schema
    - name: cities data
      ansible.builtin.shell: mysql -h mysql.beesh.life -uroot -p{{mysql_password}} < /app/schema/shipping.sql
      when: schema.stdout == "0"
    - name: start the service
      ansible.builtin.service:
        name: shipping
        state: started
        enabled: true
